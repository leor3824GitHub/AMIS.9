<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <MudDialog>
        <DialogContent>
            <FshValidation @ref="_customValidation" />
            <DataAnnotationsValidator />
            <ValidationSummary />

            <MudGrid Spacing="2">
                <!-- PO Info Display -->
                @if (Model?.InspectionRequestId != null)
                {
                    var req = InspectionRequests.FirstOrDefault(r => r.Id == Model.InspectionRequestId);
                    if (req?.Purchase != null)
                    {
                        <MudItem xs="12">
                            <MudAlert Severity="Severity.Info" Dense="true" Class="mb-2" Icon="@Icons.Material.Filled.Receipt">
                                @{
                                    var poDate = req.Purchase.PurchaseDate?.ToString("MMM dd, yyyy");
                                    var poIdShort = req.Purchase.Id?.ToString()?.Substring(0, 8);
                                }
                                <strong>PO @poDate</strong> (@poIdShort) -
                                @req.Purchase.Supplier?.Name
                                @if (req.Purchase.Items?.Count > 0)
                                {
                                    <text> - @req.Purchase.Items.Count item(s)</text>
                                }
                            </MudAlert>
                        </MudItem>
                    }
                }

                <!-- Compact horizontal row: Request | Inspector | Date -->
                <MudItem xs="12">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Wrap="Wrap.Wrap">
                        <MudSelect T="Guid?" 
                                   Label="Inspection Request"
                                   Value="@Model.InspectionRequestId"
                                   ValueChanged="OnRequestChanged"
                                   For="@(() => Model.InspectionRequestId)"
                                   Placeholder="Select inspection request"
                                   Clearable
                                   Variant="Variant.Outlined"
                                   Dense="true"
                                   Margin="Margin.Dense"
                                   Adornment="Adornment.Start"
                                   AdornmentIcon="@Icons.Material.Filled.RequestPage"
                                   Class="input-field request-field">
                            @foreach (var r in InspectionRequests)
                            {
                                <MudSelectItem T="Guid?" Value="@r.Id">
                                    @r.DateCreated.ToString("MMM dd, yyyy") - @(r.Purchase?.Supplier?.Name ?? "Unknown Supplier")
                                </MudSelectItem>
                            }
                        </MudSelect>

                        <MudSelect T="Guid?" 
                                   Label="Inspector" 
                                   @bind-Value="Model.InspectorId"
                                   Placeholder="Select inspector"
                                   Clearable
                                   Variant="Variant.Outlined"
                                   Dense="true"
                                   Margin="Margin.Dense"
                                   Adornment="Adornment.Start"
                                   AdornmentIcon="@Icons.Material.Filled.Badge"
                                   HelperText="@(_inspectorAutoFilled ? "Auto-filled from request" : "")"
                                   Class="input-field">
                            @foreach (var e in Employees)
                            {
                                <MudSelectItem T="Guid?" Value="@e.Id">@e.Name @(!string.IsNullOrEmpty(e.Designation) ? $"- {e.Designation}" : "")</MudSelectItem>
                            }
                        </MudSelect>

                        <MudDatePicker Label="Inspection Date"
                                       Date="@_inspectionDate"
                                       DateChanged="@(d => OnDateChanged(d))"
                                       Editable
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Adornment="Adornment.Start"
                                       AdornmentIcon="@Icons.Material.Filled.Event"
                                       Class="input-field date-field" />
                    </MudStack>
                </MudItem>

                <!-- Remarks Section -->
                <MudItem xs="12">
                    <MudTextField T="string" 
                                  Label="Remarks" 
                                  @bind-Value="Model.Remarks"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Lines="3"
                                  Placeholder="Add any additional notes or observations..." />
                </MudItem>

                <!-- Inspection Items Section -->
                <MudItem xs="12">
                    @if (_itemsEditor?.Inputs != null && _itemsEditor.Inputs.Count > 0)
                    {
                        <MudText Typo="Typo.caption" Color="Color.Secondary" Class="mb-2">
                            <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Small" /> 
                            @_itemsEditor.Inputs.Count item(s) • 
                            @_itemsEditor.Inputs.Sum(i => i.QtyInspected) inspected • 
                            @_itemsEditor.Inputs.Sum(i => i.QtyPassed) passed •
                            @_itemsEditor.Inputs.Sum(i => i.QtyFailed) failed
                        </MudText>
                    }
                    <MudPaper Elevation="0" Class="pa-3" Style="background-color: rgba(0, 0, 0, 0.02);">
                        <InspectionItemsEditor @ref="_itemsEditor" PurchaseItems="_poItems" Products="_products" ReadOnly="@IsReadOnly" />
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </DialogContent>

        <DialogActions>
            <MudButton Variant="Variant.Filled" 
                       Color="Color.Primary" 
                       ButtonType="ButtonType.Submit"
                       Disabled="@(_isSaving || IsReadOnly)"
                       StartIcon="@Icons.Material.Filled.Save">
                @if (_isSaving)
                {
                    <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                    <text> Saving...</text>
                }
                else
                {
                    <text>Save Inspection</text>
                }
            </MudButton>
            <MudButton Variant="Variant.Outlined" 
                       Color="Color.Secondary" 
                       OnClick="Cancel"
                       Disabled="@_isSaving"
                       StartIcon="@Icons.Material.Filled.Cancel">
                Cancel
            </MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>


