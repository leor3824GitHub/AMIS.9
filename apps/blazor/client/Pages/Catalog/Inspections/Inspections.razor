@page "/catalog/inspections"
<PageHeader Title="Inspection Management" 
            Header="Inspection Management" 
            SubHeader="Track and manage quality inspections for purchased goods" />

<MudPaper Elevation="2" Class="pa-4 mb-4">
    <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center" Class="mb-2">
        @if (_canSearch)
        {
            <MudTextField T="string"
                          ValueChanged="@(s => OnSearch(s))"
                          Placeholder="Search inspections..."
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Style="max-width: 400px;" />
        }
        <MudSpacer />
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Secondary"
                   Disabled="@_loading"
                   OnClick="@OnRefresh"
                   StartIcon="@Icons.Material.Filled.Refresh">
            Refresh
        </MudButton>
        @if (_canCreate)
        {
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Disabled="@_loading"
                       OnClick="OnCreate"
                       StartIcon="@Icons.Material.Filled.Add">
                New Inspection
            </MudButton>
        }
        @if (_canDelete)
        {
            <MudButton Variant="Variant.Filled"
                       Color="Color.Error"
                       Disabled="@(_selectedItems.Count == 0)"
                       OnClick="OnDeleteChecked"
                       StartIcon="@Icons.Material.Filled.Delete">
                Delete Selected
            </MudButton>
        }
    </MudStack>
</MudPaper>

<MudDataGrid ServerData="ServerReload"
             MultiSelection="true"
             @bind-SelectedItems="_selectedItems"
             @bind-SelectedItem="_currentDto"
             ColumnResizeMode="ResizeMode.Column"
             Hover="true"
             Loading="@_loading"
             @ref="_table"
             Outlined
             Striped="true"
             RowStyleFunc="@RowStyle">

        <Columns>
            <SelectColumn T="InspectionResponse" />
            
            <TemplateColumn Title="Inspection Date" Sortable="false">
                <CellTemplate>
                    <MudStack Row="false" Spacing="0">
                        <MudText Typo="Typo.body2">
                            @context.Item.InspectedOn.ToString("MMM dd, yyyy")
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Secondary">
                            @GetRelativeDateText(context.Item.InspectedOn)
                        </MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Inspector" Sortable="false">
                <CellTemplate>
                    @if (context.Item.Employee != null)
                    {
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                            <MudAvatar Color="Color.Primary" Size="Size.Small">
                                @GetEmployeeInitials(context.Item.Employee.Name)
                            </MudAvatar>
                            <MudStack Row="false" Spacing="0">
                                <MudText Typo="Typo.body2">@context.Item.Employee.Name</MudText>
                                @if (!string.IsNullOrEmpty(context.Item.Employee.Designation))
                                {
                                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                                        @context.Item.Employee.Designation
                                    </MudText>
                                }
                            </MudStack>
                        </MudStack>
                    }
                    else
                    {
                        <MudChip Size="Size.Small" Color="Color.Default" Variant="Variant.Outlined">Unassigned</MudChip>
                    }
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Supplier" Sortable="false">
                <CellTemplate>
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Business" Size="Size.Small" Color="Color.Info" />
                        <MudText Typo="Typo.body2">
                            @(context.Item?.Purchase?.Supplier?.Name ?? "—")
                        </MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Purchase Date" Sortable="false">
                <CellTemplate>
                    @if (context.Item?.Purchase?.PurchaseDate != null)
                    {
                        <MudText Typo="Typo.body2">
                            @context.Item.Purchase.PurchaseDate.Value.ToString("MMM dd, yyyy")
                        </MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.body2" Color="Color.Secondary">—</MudText>
                    }
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Status" Sortable="false">
                <CellTemplate>
                    <MudChip Color="@GetStatusColor(context.Item)" 
                             Size="Size.Small" 
                             Variant="Variant.Filled"
                             Icon="@GetStatusIcon(context.Item.Status)">
                        @context.Item.Status.ToString()
                    </MudChip>
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Remarks" Sortable="false">
                <CellTemplate>
                    @if (!string.IsNullOrEmpty(context.Item?.Remarks))
                    {
                        <MudText Typo="Typo.body2" Style="max-width: 300px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                            @context.Item.Remarks
                        </MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.caption" Color="Color.Secondary">No remarks</MudText>
                    }
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Actions" Sortable="false">
                <CellTemplate>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert" Dense="true" Size="Size.Small">
                        <MudMenuItem Disabled="@(!CanEdit(context.Item))" OnClick="@(() => OnEdit(context.Item))">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                <MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Color="Color.Info" />
                                <MudText>Edit Inspection</MudText>
                            </MudStack>
                        </MudMenuItem>
                        @if (_canUpdate)
                        {
                            <MudMenuItem Disabled="@(!IsApproveEnabled(context.Item))" OnClick="@(() => OnApprove(context.Item))">
                                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Small" Color="Color.Success" />
                                    <MudText>Approve</MudText>
                                </MudStack>
                            </MudMenuItem>
                        }
                        <MudDivider />
                        <MudMenuItem Disabled="@(!CanDelete(context.Item))" OnClick="@(() => OnDelete(context.Item))">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                <MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Color="Color.Error" />
                                <MudText>Delete</MudText>
                            </MudStack>
                        </MudMenuItem>
                    </MudMenu>
                </CellTemplate>
            </TemplateColumn>
        </Columns>

    <PagerContent>
        <MudDataGridPager />
    </PagerContent>
</MudDataGrid>
