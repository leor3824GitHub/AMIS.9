<div class="cart-container">
    <div class="cart-items">
        <h2>Shopping Cart</h2>
        <p>@CartItems.Count item(s)</p>

        @foreach (var item in CartItems)
        {
            <div class="cart-item">
                <img src="@item.ImageUrl" alt="Shirt" />
                <div class="details">
                    <p class="name">@item.Name</p>
                    <p class="desc">@item.Description</p>
                </div>
                <div class="quantity">
                    <button @onclick="() => DecreaseQuantity(item)">-</button>
                    <input type="text" value="@item.Quantity" readonly />
                    <button @onclick="() => IncreaseQuantity(item)">+</button>
                </div>
                <p class="price">€ @item.Price.ToString("0.00")</p>
                <button class="remove" @onclick="() => RemoveItem(item)">×</button>
            </div>
        }

        <a href="/shop" class="back-link">← Back to shop</a>
    </div>

    <div class="cart-summary">
        <h3>Summary</h3>
        <p>ITEMS: @CartItems.Sum(i => i.Quantity)</p>
        <p>€ @Total.ToString("0.00")</p>

        <label>SHIPPING</label>
        <select>
            <option>Standard-Delivery - €5.00</option>
        </select>

        <label>GIVE CODE</label>
        <input type="text" @bind="CouponCode" placeholder="Enter your code" />
        <button class="apply-code">→</button>

        <div class="total">
            <p>TOTAL PRICE</p>
            <h2>€ @GrandTotal.ToString("0.00")</h2>
        </div>

        <button class="checkout">CHECKOUT</button>
    </div>
</div>

@code {
    private List<CartItem> CartItems = new()
    {
        new CartItem("Shirt", "Cotton T-shirt", 44.00m, "/images/shirt1.png"),
        new CartItem("Shirt", "Cotton T-shirt", 44.00m, "/images/shirt2.png"),
        new CartItem("Shirt", "Cotton T-shirt", 44.00m, "/images/shirt3.png"),
    };

    private decimal Shipping => 5.00m;
    private decimal Total => CartItems.Sum(i => i.Price * i.Quantity);
    private decimal GrandTotal => Total + Shipping;
    private string CouponCode = "";

    private void IncreaseQuantity(CartItem item) => item.Quantity++;
    private void DecreaseQuantity(CartItem item) { if (item.Quantity > 1) item.Quantity--; }
    private void RemoveItem(CartItem item) => CartItems.Remove(item);

    public class CartItem
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public int Quantity { get; set; } = 1;
        public string ImageUrl { get; set; }

        public CartItem(string name, string desc, decimal price, string imageUrl)
        {
            Name = name;
            Description = desc;
            Price = price;
            ImageUrl = imageUrl;
        }
    }
}
